<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Menu Multi-Jogos</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

  <!-- anime.js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>

  <style>
    body, html {
      height: 100%;
      margin: 0;
      background: #1e272e;
      color: #f1f2f6;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;
    }
    .app-container {
      width: 100%;
      max-width: 600px;
      background: #2f3640;
      border-radius: 12px;
      padding: 30px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.6);
      position: relative;
      min-height: 480px;
    }
    .screen {
      display: none;
      flex-direction: column;
      height: 100%;
    }
    .screen.active {
      display: flex;
    }
    h2 {
      margin-bottom: 1.5rem;
      text-align: center;
      color: #70a1ff;
      user-select: none;
    }
    button {
      user-select: none;
    }
    /* Bot√£o de voltar */
    .btn-back {
      align-self: flex-start;
      margin-bottom: 20px;
      background-color: #57606f;
      color: #f1f2f6;
    }
    .btn-back:hover {
      background-color: #3742fa;
      color: white;
    }
    /* Bot√µes do menu */
    .menu-btn {
      margin: 12px 0;
      font-size: 1.3rem;
      padding: 12px 0;
      border-radius: 50px;
      background: linear-gradient(45deg, #70a1ff, #5352ed);
      border: none;
      color: white;
      transition: transform 0.3s ease;
    }
    .menu-btn:hover {
      transform: scale(1.05);
      background: linear-gradient(45deg, #5352ed, #70a1ff);
    }
    /* Jogo da velha - grade */
    .tictactoe-board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 10px;
      justify-content: center;
      margin-top: 20px;
    }
    .cell {
      background-color: #485460;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 3rem;
      font-weight: 700;
      color: #70a1ff;
      cursor: pointer;
      user-select: none;
      border-radius: 10px;
      transition: background-color 0.3s;
    }
    .cell:hover {
      background-color: #2f3640;
    }
    .game-status {
      margin-top: 15px;
      text-align: center;
      font-size: 1.2rem;
      min-height: 1.6em;
      color: #a4b0be;
    }
    /* Quiz */
    .quiz-question {
      font-size: 1.3rem;
      margin-bottom: 20px;
      min-height: 3.5em;
      user-select: none;
    }
    .quiz-options button {
      margin-bottom: 10px;
      width: 100%;
      font-size: 1.1rem;
      border-radius: 10px;
      background-color: #57606f;
      color: white;
      border: none;
      transition: background-color 0.3s;
    }
    .quiz-options button:hover {
      background-color: #3742fa;
      cursor: pointer;
    }
    .quiz-result {
      margin-top: 15px;
      font-weight: 600;
      min-height: 1.4em;
    }
    /* Adivinhe o n√∫mero */
    .guess-number-input {
      width: 100%;
      padding: 10px 15px;
      font-size: 1.2rem;
      border-radius: 10px;
      border: none;
      margin-bottom: 10px;
    }
    .guess-feedback {
      margin-top: 10px;
      font-size: 1.2rem;
      min-height: 1.4em;
      user-select: none;
    }
  </style>
</head>
<body>

  <div class="app-container">

    <!-- Tela Menu -->
    <div id="menuScreen" class="screen active flex-column">
      <h2>Escolha um Jogo</h2>
      <button class="menu-btn" data-game="tictactoe">Jogo da Velha</button>
      <button class="menu-btn" data-game="quiz">Quiz de Perguntas</button>
      <button class="menu-btn" data-game="guessNumber">Adivinhe o N√∫mero</button>
    </div>

    <!-- Tela Jogo da Velha -->
    <div id="tictactoeScreen" class="screen flex-column align-items-center">
      <button class="btn btn-back" id="backFromTTT">‚Üê Voltar</button>
      <h2>Jogo da Velha</h2>
      <div class="tictactoe-board" id="tttBoard">
        <!-- 9 c√©lulas -->
        <div class="cell" data-index="0"></div>
        <div class="cell" data-index="1"></div>
        <div class="cell" data-index="2"></div>
        <div class="cell" data-index="3"></div>
        <div class="cell" data-index="4"></div>
        <div class="cell" data-index="5"></div>
        <div class="cell" data-index="6"></div>
        <div class="cell" data-index="7"></div>
        <div class="cell" data-index="8"></div>
      </div>
      <div class="game-status" id="tttStatus"></div>
      <button class="btn btn-primary mt-3" id="tttRestart">Reiniciar</button>
    </div>

    <!-- Tela Quiz -->
    <div id="quizScreen" class="screen flex-column">
      <button class="btn btn-back" id="backFromQuiz">‚Üê Voltar</button>
      <h2>Quiz de Perguntas</h2>
      <div class="quiz-question" id="quizQuestion"></div>
      <div class="quiz-options" id="quizOptions"></div>
      <div class="quiz-result" id="quizResult"></div>
      <button class="btn btn-primary mt-3" id="quizRestart" style="display:none;">Reiniciar Quiz</button>
    </div>

    <!-- Tela Adivinhe o N√∫mero -->
    <div id="guessNumberScreen" class="screen flex-column align-items-center">
      <button class="btn btn-back" id="backFromGuess">‚Üê Voltar</button>
      <h2>Adivinhe o N√∫mero</h2>
      <input
        type="number"
        class="guess-number-input"
        id="guessInput"
        placeholder="Digite um n√∫mero entre 1 e 100"
        min="1"
        max="100"
      />
      <button class="btn btn-primary mb-3" id="guessSubmit">Enviar</button>
      <div class="guess-feedback" id="guessFeedback"></div>
      <button class="btn btn-primary" id="guessRestart" style="display:none;">Jogar Novamente</button>
    </div>

  </div>

  <script>
    // Controle de telas
    const screens = {
      menu: document.getElementById('menuScreen'),
      ttt: document.getElementById('tictactoeScreen'),
      quiz: document.getElementById('quizScreen'),
      guess: document.getElementById('guessNumberScreen'),
    };

    function showScreen(screen) {
      Object.values(screens).forEach(s => s.classList.remove('active'));
      screen.classList.add('active');
      anime({
        targets: screen,
        opacity: [0,1],
        translateY: [20,0],
        duration: 600,
        easing: 'easeOutQuad'
      });
    }

    // Bot√µes menu -> jogos
    document.querySelectorAll('.menu-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const game = btn.dataset.game;
        if(game === 'tictactoe') {
          resetTicTacToe();
          showScreen(screens.ttt);
        } else if(game === 'quiz') {
          resetQuiz();
          showScreen(screens.quiz);
        } else if(game === 'guessNumber') {
          resetGuessNumber();
          showScreen(screens.guess);
        }
      });
    });

    // Bot√µes voltar
    document.getElementById('backFromTTT').addEventListener('click', () => showScreen(screens.menu));
    document.getElementById('backFromQuiz').addEventListener('click', () => showScreen(screens.menu));
    document.getElementById('backFromGuess').addEventListener('click', () => showScreen(screens.menu));

    // === JOGO DA VELHA ===
    const tttBoard = document.getElementById('tttBoard');
    const tttStatus = document.getElementById('tttStatus');
    const tttRestartBtn = document.getElementById('tttRestart');

    let tttBoardState = Array(9).fill(null);
    let tttPlayer = 'X';
    let tttGameOver = false;

    function checkWinner(board) {
      const lines = [
        [0,1,2], [3,4,5], [6,7,8],
        [0,3,6], [1,4,7], [2,5,8],
        [0,4,8], [2,4,6]
      ];
      for(let [a,b,c] of lines) {
        if(board[a] && board[a] === board[b] && board[a] === board[c]) {
          return board[a];
        }
      }
      return null;
    }
    function isBoardFull(board) {
      return board.every(cell => cell !== null);
    }
    function updateTicTacToe() {
      tttBoard.querySelectorAll('.cell').forEach((cell, idx) => {
        cell.textContent = tttBoardState[idx] || '';
      });
      const winner = checkWinner(tttBoardState);
      if(winner) {
        tttStatus.textContent = `Jogador ${winner} venceu! üéâ`;
        tttGameOver = true;
      } else if(isBoardFull(tttBoardState)) {
        tttStatus.textContent = 'Empate!';
        tttGameOver = true;
      } else {
        tttStatus.textContent = `Vez do jogador ${tttPlayer}`;
      }
    }
    function cellClick(e) {
      if(tttGameOver) return;
      const idx = +e.target.dataset.index;
      if(tttBoardState[idx]) return;
      tttBoardState[idx] = tttPlayer;
      tttPlayer = tttPlayer === 'X' ? 'O' : 'X';
      updateTicTacToe();
    }
    function resetTicTacToe() {
      tttBoardState = Array(9).fill(null);
      tttPlayer = 'X';
      tttGameOver = false;
      updateTicTacToe();
    }
    tttBoard.querySelectorAll('.cell').forEach(cell => {
      cell.addEventListener('click', cellClick);
    });
    tttRestartBtn.addEventListener('click', resetTicTacToe);

    // === QUIZ ===
    const quizData = [
      {
        question: "Qual a capital do Brasil?",
        options: ["Bras√≠lia", "Rio de Janeiro", "S√£o Paulo", "Salvador"],
        answer: 0
      },
      {
        question: "Qual planeta √© conhecido como Planeta Vermelho?",
        options: ["V√™nus", "Marte", "J√∫piter", "Saturno"],
        answer: 1
      },
      {
        question: "Quem escreveu 'Dom Casmurro'?",
        options: ["Machado de Assis", "Jos√© de Alencar", "Clarice Lispector", "Jorge Amado"],
        answer: 0
      }
    ];
    let currentQuizIndex = 0;
    let quizScore = 0;
    const quizQuestionEl = document.getElementById('quizQuestion');
    const quizOptionsEl = document.getElementById('quizOptions');
    const quizResultEl = document.getElementById('quizResult');
    const quizRestartBtn = document.getElementById('quizRestart');

    function loadQuiz() {
      quizResultEl.textContent = '';
      quizRestartBtn.style.display = 'none';
      quizOptionsEl.innerHTML = '';
      const current = quizData[currentQuizIndex];
      quizQuestionEl.textContent = current.question;
      current.options.forEach((opt, i) => {
        const btn = document.createElement('button');
        btn.textContent = opt;
        btn.addEventListener('click', () => selectOption(i));
        quizOptionsEl.appendChild(btn);
      });
    }
    function selectOption(selectedIndex) {
      const current = quizData[currentQuizIndex];
      if(selectedIndex === current.answer) {
        quizScore++;
        quizResultEl.textContent = 'Resposta correta! üéâ';
        quizResultEl.style.color = '#2ed573';
      } else {
        quizResultEl.textContent = `Errado! A resposta correta √© "${current.options[current.answer]}".`;
        quizResultEl.style.color = '#ff4757';
      }
      // Remove op√ß√µes para evitar m√∫ltiplos cliques
      Array.from(quizOptionsEl.children).forEach(btn => btn.disabled = true);

      currentQuizIndex++;
      if(currentQuizIndex < quizData.length) {
        setTimeout(() => {
          loadQuiz();
        }, 1500);
      } else {
        setTimeout(() => {
          quizResultEl.textContent = `Fim do quiz! Voc√™ acertou ${quizScore} de ${quizData.length}.`;
          quizRestartBtn.style.display = 'inline-block';
        }, 1500);
      }
    }
    function resetQuiz() {
      currentQuizIndex = 0;
      quizScore = 0;
      loadQuiz();
    }
    quizRestartBtn.addEventListener('click', resetQuiz);

    // === ADIVINHE O N√öMERO ===
    const guessInput = document.getElementById('guessInput');
    const guessSubmit = document.getElementById('guessSubmit');
    const guessFeedback = document.getElementById('guessFeedback');
    const guessRestart = document.getElementById('guessRestart');

    let secretNumber, attempts;

    function resetGuessNumber() {
      secretNumber = Math.floor(Math.random() * 100) + 1;
      attempts = 0;
      guessInput.value = '';
      guessFeedback.textContent = '';
      guessRestart.style.display = 'none';
      guessSubmit.disabled = false;
      guessInput.disabled = false;
    }

    guessSubmit.addEventListener('click', () => {
      const guess = Number(guessInput.value);
      if (!guess || guess < 1 || guess > 100) {
        guessFeedback.textContent = 'Por favor, digite um n√∫mero entre 1 e 100.';
        guessFeedback.style.color = '#ff6b6b';
        return;
      }
      attempts++;
      if (guess === secretNumber) {
        guessFeedback.textContent = `Parab√©ns! Voc√™ acertou o n√∫mero em ${attempts} tentativa(s). üéâ`;
        guessFeedback.style.color = '#2ed573';
        guessSubmit.disabled = true;
        guessInput.disabled = true;
        guessRestart.style.display = 'inline-block';
      } else if (guess < secretNumber) {
        guessFeedback.textContent = 'Tente um n√∫mero maior.';
        guessFeedback.style.color = '#f1f2f6';
      } else {
        guessFeedback.textContent = 'Tente um n√∫mero menor.';
        guessFeedback.style.color = '#f1f2f6';
      }
      guessInput.value = '';
      guessInput.focus();
    });

    guessRestart.addEventListener('click', resetGuessNumber);

    // Inicializa
    resetQuiz();
    resetTicTacToe();
    resetGuessNumber();

  </script>

</body>
</html>
